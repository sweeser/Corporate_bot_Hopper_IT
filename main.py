import sqlite3
import time

import telebot
from telebot import TeleBot
from telebot import types

db = sqlite3.connect('server.db', check_same_thread=False)
cr = db.cursor()

bot: TeleBot = telebot.TeleBot('5238036623:AAFIOXKc0HW5LeVGwXgVnAVHtEzc2ALfQj0')

#cr.execute(f"update users set roots = 'Admin' where user_id = '269112132'")

#cr.execute("drop table users")
#db.commit()

#cr.execute("drop table archive_docs")
#db.commit()

cr.execute("create table if not exists users (user_id int primary key, surname text, name text, roots text)")
db.commit()

cr.execute("create table if not exists docs (doc_id int primary key, name_doc text, discription text)")
db.commit()

#cr.execute("insert into docs (doc_id, name_doc) values(1,'–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–µ–∫—Ä–µ—Ç')")
#db.commit()
#cr.execute("insert into docs (doc_id, name_doc) values(2,'–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ø—É—Å–∫')")
#db.commit()
#cr.execute("insert into docs (doc_id, name_doc) values(3,'–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π')")
#db.commit()

cr.execute("create table if not exists statuses (status_id int primary key, name_status text, discription text)")
db.commit()

cr.execute("create table if not exists archive_docs (id int primary key, datetime text, doc_id int, user_id int, status text)")
db.commit()






@bot.message_handler(commands=['start'])
def start(message):
    cr.execute(f"select * from users where user_id = '{message.chat.id}'")
    if cr.fetchone() is None:
        cr.execute("insert into users values(?, ?, ?, ?)", (message.chat.id, message.from_user.last_name, message.from_user.first_name, "User"))
        db.commit()
        k = 1
    else:
        rt_in = cr.execute(f"select roots from users where user_id = '{message.from_user.id}'").fetchone()
        if rt_in[0] == 'Admin':
            k = 3
        else:
            k = 2

    mess_for_new = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{message.from_user.last_name} {message.from_user.first_name}</b>!\n" \
                   f"–≠—Ç–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ 'Hopper IT'.–î–ª—è –í–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ –ø—Ä–∏–≤–µ–¥—ë–Ω —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: " \
                   f"\n/help-—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥;" \
                   f"\n/status-—É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è;" \
                   f"\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ."
    mess_for_old = f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, <b>{message.from_user.last_name} {message.from_user.first_name}</b>!\n" \
                   f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —É –±–æ—Ç–∞ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã: " \
                   f"\n/help-—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥;" \
                   f"\n/status-—É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è."

    #mess_start = f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.last_name} {message.from_user.first_name}</b>, —ç—Ç–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Hopper IT.–î–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ –ø—Ä–∏–≤–µ–¥—ë–Ω —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: " \
    #             f"\n/help-—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥;" \
    #             f"\n/status-—É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è\n\n"
    #bot.send_message(message.chat.id, mess_start, parse_mode='html')

    for vl in cr.execute("select * from users"):
        print(vl)
    print("---------------------------------------------------")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if k == 1:
        buttons_for_user(message)
    if k == 2:
        buttons_for_user(message)
    if k == 3:
        buttons_for_adm(message)


    #if (message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
    #    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ —á–∏—Ç–∞–µ—à—å —Å—Ç–∞—Ç—å—é!)")
    #elif (message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
    #    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #    btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
    #    btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
    #    back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    #    markup.add(btn1, btn2, back)
    #    bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

    #elif (message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
    #    bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏..")

    #elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
    #    bot.send_message(message.chat.id, text="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å —á–∏—Ç–∞—Ç–µ–ª—è–º–∏")

    #elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
    #    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #    button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    #    button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    #    markup.add(button1, button2)
    #    bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    #else:
    #    bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")

def buttons_for_user(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞—è–≤. –Ω–∞ –¥–µ–∫—Ä–µ—Ç")
    item2 = types.KeyboardButton("–ó–∞—è–≤. –Ω–∞ –æ—Ç–ø—É—Å–∫")
    item3 = types.KeyboardButton("–ó–∞—è–≤. –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π")
    item4 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ")
    item5 = types.KeyboardButton("–ú–æ–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è")
    markup.add(item1, item2, item3, item4, item5)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', reply_markup=markup)




def buttons_for_adm(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞—è–≤. –Ω–∞ –¥–µ–∫—Ä–µ—Ç")
    item2 = types.KeyboardButton("–ó–∞—è–≤. –Ω–∞ –æ—Ç–ø—É—Å–∫")
    item3 = types.KeyboardButton("–ó–∞—è–≤. –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π")
    item4 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ")
    item5 = types.KeyboardButton("–í—Å–µ –∑–∞—è–≤–ª–µ–Ω–∏—è")
    item6 = types.KeyboardButton("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    item7 = types.KeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –∑–∞—è–≤–ª–µ–Ω–∏–π")
    item8 = types.KeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    item9 = types.KeyboardButton("–ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º")
    item10 = types.KeyboardButton("–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ, –∞–¥–º–∏–Ω', reply_markup=markup)

@bot.message_handler(commands=['commandlist'])
def button(message):
    mess_command = f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}</b>, —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:" \
                 f"\n–î–µ–∫—Ä–µ—Ç - –ø–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–µ–∫—Ä–µ—Ç–Ω—ã–π –æ—Ç–ø—É—Å–∫;" \
                 f"\n–û—Ç–ø—É—Å–∫ - –ø–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ø—É—Å–∫;" \
                 f"\n–ë–æ–ª—å–Ω–∏—á–Ω—ã–π - –ø–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π"
    bot.send_message(message.chat.id, mess_command, parse_mode='html')

id_doc = 0

@bot.message_handler(content_types=['text'])
def get_user_text(message):
    global id_doc
    mess_text_user = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name} {message.from_user.last_name}, –∞ —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ {message.from_user.username}</b>'


    if message.text.lower() == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(message.chat.id, mess_text_user, parse_mode='html')


    elif message.text == "id":
        bot.send_message(message.chat.id, f"–¢–≤–æ–π id, <b>{message.from_user.id}</b>", parse_mode='html')


    elif (message.text == "–ó–∞—è–≤. –Ω–∞ –¥–µ–∫—Ä–µ—Ç"):
        id_doc = 1
        dek = cr.execute(f"select * from archive_docs where doc_id = '{id_doc}' and user_id = '{message.from_user.id}' "
                         f"and status = '–ü—Ä–∏–Ω—è—Ç–æ'").fetchall()
        if len(dek) == 0:
            doc = open('–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–µ–∫—Ä–µ—Ç.doc', 'rb')
            bot.send_document(message.chat.id, doc)
        else:
            bot.send_message(message.chat.id, f"–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –¥–µ–∫—Ä–µ—Ç. –û–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ—à–µ–Ω–∏—è –ø–æ –µ–≥–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é.", parse_mode='html')


    elif (message.text == "–ó–∞—è–≤. –Ω–∞ –æ—Ç–ø—É—Å–∫"):
        id_doc = 2
        otp = cr.execute(f"select * from archive_docs where doc_id = '{id_doc}' and user_id = '{message.from_user.id}' "
                         f"and status = '–ü—Ä–∏–Ω—è—Ç–æ'").fetchall()
        if len(otp) == 0:
            doc = open('–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ø—É—Å–∫.doc', 'rb')
            bot.send_document(message.chat.id, doc)
        else:
            bot.send_message(message.chat.id, f"–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç–ø—É—Å–∫. –û–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ—à–µ–Ω–∏—è –ø–æ –µ–≥–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é.", parse_mode='html')


    elif (message.text == "–ó–∞—è–≤. –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π"):
        id_doc = 3
        bol = cr.execute(f"select * from archive_docs where doc_id = '{id_doc}' and user_id = '{message.from_user.id}' "
                         f"and status = '–ü—Ä–∏–Ω—è—Ç–æ'").fetchall()
        if len(bol) == 0:
            doc = open('–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π.doc', 'rb')
            bot.send_document(message.chat.id, doc)
        else:
            bot.send_message(message.chat.id, f"–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã–π. –û–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ—à–µ–Ω–∏—è –ø–æ –µ–≥–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é.", parse_mode='html')


    elif (message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(back)
        info = cr.execute(f"select * from users where user_id = '{message.from_user.id}'").fetchall()
        for i in info:
            bot.send_message(message.chat.id,
                         "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å:\nID: "
                         +str(i[0])+"\n–§–∞–º–∏–ª–∏—è: "
                         +str(i[1])+"\n–ò–º—è: "
                         +str(i[2])+"\n–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: "
                         +str(i[3])+"\n", reply_markup=markup)


    elif (message.text == "–ú–æ–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(back)
        st = "–í–∞–º–∏ –ø–æ–¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è:\n\n--–î–∞—Ç–∞ –≤—Ä–µ–º—è--–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞--–°—Ç–∞—Ç—É—Å\n"
        info = cr.execute(f"select a.datetime, d.name_doc, a.status "
                          f"from archive_docs a, docs d "
                          f"where user_id = '{message.from_user.id}'"
                          f"and a.doc_id = d.doc_id").fetchall()
        for i in info:
            st += str(i[0])+"--"+str(i[1])+"--"+str(i[2])+"\n"
        bot.send_message(message.chat.id, st, reply_markup=markup)





    elif message.text.lower() == "–∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è":
        sz = cr.execute(f"select roots from users where user_id = '{message.from_user.id}'").fetchone()
        if sz[0] == 'Admin':
            stzayav = cr.execute(f'select id, datetime, doc_id, user_id, status from archive_docs').fetchall()
            if len(stzayav) == 0:
                bot.send_message(message.chat.id, "–í –±–∞–∑–µ –ø—É—Å—Ç–æ", parse_mode='html')
            else:
                bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ (–≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ "
                                                  f"–æ—Ç–ø—Ä–∞–≤—å—Ç–µ ID –∑–∞–ø–∏—Å–∏):\n\n"
                                                  f"--ID –∑–∞–ø–∏—Å–∏--–î–∞—Ç–∞ –í—Ä–µ–º—è--ID –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                                                  f"--ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è--–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è--", parse_mode='html')
                for row in stzayav:
                    bot.send_message(message.chat.id, str(row[0]) + "--" + str(row[1]) + "--" + str(row[2])
                                     + str(row[3]) + "--" + str(row[4]), parse_mode='html')
                get_adm_id(message)


        else:
            bot.send_message(message.chat.id, '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.', parse_mode='html')


    elif message.text == "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(back)
        rt = cr.execute(f"select roots from users where user_id = '{message.from_user.id}'").fetchone()
        if rt[0] == 'Admin':
            st = "--ID--Surname--Name--Roots\n\n"
            rec = cr.execute(f'select user_id, surname, name, roots from users').fetchall()
            if len(rec) == 0:
                bot.send_message(message.chat.id, "–í –±–∞–∑–µ –ø—É—Å—Ç–æ", reply_markup=markup)
            else:
                for row in rec:
                    st += str(row[0])+"--"+str(row[1])+"--"+str(row[2])+"--"+str(row[3])+"\n"
                bot.send_message(message.chat.id, str(st), reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.', parse_mode='html')


    elif (message.text == "–í—Å–µ –∑–∞—è–≤–ª–µ–Ω–∏—è"):
        rt = cr.execute(f"select roots from users where user_id = '{message.from_user.id}'").fetchone()
        if rt[0] == 'Admin':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(back)
            st = "--ID –∑–∞–ø–∏—Å–∏--–î–∞—Ç–∞ –í—Ä–µ–º—è--ID –¥–æ–∫—É–º–µ–Ω—Ç–∞--ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è--–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–ª–µ–Ω–∏—è--\n\n"
            arch = cr.execute(f'select * from archive_docs').fetchall()
            for row in arch:
                print(str(row[0])+"--"+str(row[1])+"--"+str(row[2])+
                                 "--"+str(row[3])+"--"+str(row[4]))
                st += str(row[0])+"--"+str(row[1])+"--"+str(row[2])+"--"+str(row[3])+"--"+str(row[4])+"\n"
            bot.send_message(message.chat.id,st, reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.', parse_mode='html')

    elif (message.text == "–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –∑–∞—è–≤–ª–µ–Ω–∏–π"):
        cr.execute('delete from archive_docs where id != 1')


    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
            back_to_main_menu(message)


    elif (message.text == "–ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(back)
        rec = cr.execute(f'select user_id, surname, name, roots from users').fetchall()
        if len(rec) == 0:
            bot.send_message(message.chat.id, "–í –±–∞–∑–µ –ø—É—Å—Ç–æ", reply_markup=markup)
        else:
            st = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n--ID--Surname--Name--Roots\n"
            #bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n--ID--Surname--Name--Roots")
            for row in rec:
                st += str(row[0]) + "--" + str(row[1]) + "--" + str(row[2]) + "--" + str(row[3])+"\n"
            bot.send_message(message.chat.id, st, reply_markup=markup)
            btns_for_give_adm(message)


    elif (message.text == "–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(back)
        rec = cr.execute(f'select user_id, surname, name, roots from users').fetchall()
        if len(rec) == 0:
            bot.send_message(message.chat.id, "–í –±–∞–∑–µ –ø—É—Å—Ç–æ", reply_markup=markup)
        else:
            st = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n--ID--Surname--Name--Roots\n"
            for row in rec:
                st += str(row[0]) + "--" + str(row[1]) + "--" + str(row[2]) + "--" + str(row[3])+"\n"
            bot.send_message(message.chat.id, st, reply_markup=markup)
            btns_for_give_user(message)



    else:
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å–æ —Å–ø–æ—Å–∫–æ–º –∫–æ–º–∞–Ω–¥.", parse_mode='html')

def back_to_main_menu(message):
    #bot.edit_message_reply_markup(message.chat.id, message_id=message.message_id,
    #                             reply_markup='')
    #bot.delete_message(message.chat.id, message.message_id-1)
    #bot.delete_message(message.chat.id, message.message_id - 2)
    rt = cr.execute(f"select roots from users where user_id = '{message.from_user.id}'").fetchone()
    if rt[0] == 'Admin':
        buttons_for_adm(message)
    else:
        buttons_for_user(message)

def btns_for_give_adm(message):
    kb = types.InlineKeyboardMarkup(row_width=1)
    row = cr.execute(f'select user_id from users').fetchall()
    for rw in row:
        btn = types.InlineKeyboardButton(text=f'{str(rw[0])}', callback_data=f'{str(rw[0])+" "+str(1)}')
        kb.add(btn)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º:', reply_markup=kb)

def btns_for_give_user(message):
    kb = types.InlineKeyboardMarkup(row_width=2)
    row = cr.execute(f'select user_id from users').fetchall()
    for rw in row:
        btn = types.InlineKeyboardButton(text=f'{str(rw[0])}', callback_data=f'{str(rw[0])+" "+str(0)}')
        kb.add(btn)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:',reply_markup=kb)

@bot.callback_query_handler(func=lambda callback: callback.data)
def check_cb_data(callback):
    print(callback.data[10])
    if callback.data[10] == str(1):
        bot.edit_message_reply_markup(callback.message.chat.id, message_id=callback.message.message_id,
                                      reply_markup='') #—É–¥–∞–ª—è–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—É—é –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        upd = cr.execute(f"update users set roots = 'Admin' where user_id = '{callback.data[0:9]}'")
        db.commit()
        bot.send_message(callback.message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {callback.data[0:9]} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.')



    elif callback.data[10] == str(0):
        bot.edit_message_reply_markup(callback.message.chat.id, message_id=callback.message.message_id,
                                      reply_markup='') #—É–¥–∞–ª—è–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—É—é –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        upd = cr.execute(f"update users set roots = 'User' where user_id = '{callback.data[0:9]}'")
        db.commit()
        bot.send_message(callback.message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {callback.data[0:9]} –Ω–∞–∑–Ω–∞—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.')



def get_adm_id(message):
    cid = cr.execute(f'select min(id), max(id) from archive_docs').fetchall()
    for ccid in cid:
        minid = ccid[0]
        maxid = ccid[1]
    if int(message.text) > maxid or int(message.text) < minid:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID!", parse_mode='html')

@bot.message_handler(content_types=['document'])
def get_user_doc(message):
    global id_doc
    tconv = lambda x: time.strftime("%d.%m.%Y %H:%M:%S", time.localtime(x))
    max_id = cr.execute("select max(id) from archive_docs").fetchone()
    cr.execute("""insert into archive_docs values(?, ?, ?, ?, ?)""",
               (int(max_id[0])+1, tconv(message.date), id_doc, message.from_user.id, "–ü—Ä–∏–Ω—è—Ç–æ"))
    db.commit()
    bot.send_message(message.chat.id, "–í–∞—à–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É", parse_mode='html')
    id_doc = 0
    for vl in cr.execute("select * from archive_docs"):
        print(vl)
    print("---------------------------------------------------")


#@bot.message_handler(commands=['button'])
#def button(message):
#    markup = types.InlineKeyboardMarkup()
#    markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å –≤–µ–±", url="http://www.pdd24.com/pdd-onlain"))
#    bot.send_message(message.chat.id, "–ö–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç", reply_markup=markup)

@bot.message_handler(commands=['button'])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ö–Ω–æ–ø–∫–∞ 1")
    item2 = types.KeyboardButton("–ö–Ω–æ–ø–∫–∞ 2")
    item3 = types.KeyboardButton("–ö–Ω–æ–ø–∫–∞ 3")
    item4 = types.KeyboardButton("–ö–Ω–æ–ø–∫–∞ 4")
    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ',reply_markup=markup)

@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text=="–ö–Ω–æ–ø–∫–∞":
        bot.send_message(message.chat.id,"https://habr.com/ru/users/lubaznatel/")


bot.infinity_polling()

# @bot.message_handler(commands=['help'])
# def button(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#     button1 = types.KeyboardButton("button1")
#     button2 = types.KeyboardButton("button2")
#     markup.add(button1, button2)
#     bot.send_message(message.chat.id, "–ö–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç", reply_markup=markup)





bot.polling(none_stop=True)
